import org.yaml.snakeyaml.DumperOptions
import org.yaml.snakeyaml.Yaml

plugins {
    id "com.github.node-gradle.node" version "5.0.0"
    id "io.freefair.lombok" version "8.0.1"
    id "run.halo.plugin.devtools" version "0.0.7"
    id 'java'
}

group 'top.aiheiyo.map'
sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org/content/repositories/releases' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    implementation platform('run.halo.tools.platform:plugin:2.13.0-SNAPSHOT')
    compileOnly 'run.halo.app:api'
    testImplementation 'run.halo.app:api'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

node {
    pnpmVersion = '8'
    nodeProjectDir = file("${project.projectDir}/console")
}

task buildFrontend(type: PnpmTask) {
    args = ['build']
}

build {
    // build frontend before build
    tasks.getByName('compileJava').dependsOn('buildFrontend')
}

tasks.register('readYamlVersion') {
    doLast {
        def yamlFile = file('plugin.yaml')
        def yaml = new Yaml().load(yamlFile.newInputStream())
        def version = yaml.spec.version
        println version
    }
}

// 更新版本号
tasks.register('updateVersion') {
    doLast {
        def yamlFile = file('src/main/resources/plugin.yaml')
        def yaml = new Yaml().load(yamlFile.newInputStream())
        yaml.spec.version = project.version
        def newYaml = new DumperOptions()
        newYaml.setDefaultFlowStyle(DumperOptions.FlowStyle.BLOCK)
        def yamlOutput = new Yaml(newYaml).dump(yaml)
        yamlFile.write(yamlOutput)
    }
}
// 构建之前先执行更新版本号的任务
build.dependsOn updateVersion

